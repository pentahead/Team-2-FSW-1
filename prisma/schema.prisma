generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Manufacture {
  id                 Int      @id @default(autoincrement())
  manufacture_name   String?  @db.VarChar(100)
  manufacture_region String?  @db.VarChar(100)
  year_establish     Int?
  models             Models[]
}

model Transmission {
  id                Int      @id @default(autoincrement())
  transmission_name String?  @db.VarChar(100)
  models            Models[]
}

model Type {
  id        Int      @id @default(autoincrement())
  type_name String?  @db.VarChar(100)
  models    Models[]
}

model Available {
  id               Int     @id @default(autoincrement())
  available_status String? @db.VarChar(100)
  cars             Cars[]
}

model Options {
  id          Int      @id @default(autoincrement())
  option_name String?  @db.VarChar(100)
<<<<<<< HEAD
  Models      Models[]
=======
  models      Models[] @relation("ModelsToOptions")
>>>>>>> b97dd3b6bd96d5311bc906f8be1275595e2adab2
}

model Specs {
  id        Int      @id @default(autoincrement())
  spec_name String?  @db.VarChar(100)
<<<<<<< HEAD
  Models    Models[]
=======
  models    Models[] @relation("ModelsToSpecs")
>>>>>>> b97dd3b6bd96d5311bc906f8be1275595e2adab2
}

model Models {
  id              Int           @id @default(autoincrement())
  model_name      String?       @db.VarChar(100)
  transmission_id Int?
  capacity        Int?
  type_id         Int?
  manufacture_id  Int?
<<<<<<< HEAD
  options_id      Int?
  specs_id        Int?
  cars            Cars[]
  manufacture     Manufacture?  @relation(fields: [manufacture_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Options         Options?      @relation(fields: [options_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Specs           Specs?        @relation(fields: [specs_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  transmission    Transmission? @relation(fields: [transmission_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  type            Type?         @relation(fields: [type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
=======
  cars            Cars[]
  manufacture     Manufacture?  @relation(fields: [manufacture_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  transmission    Transmission? @relation(fields: [transmission_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  type            Type?         @relation(fields: [type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  options         Options[]     @relation("ModelsToOptions")
  specs           Specs[]       @relation("ModelsToSpecs")
>>>>>>> b97dd3b6bd96d5311bc906f8be1275595e2adab2
}

model Cars {
  id              Int        @id @default(autoincrement())
  plate           String?    @db.VarChar(25)
  model_id        Int?
  rentPerDay      Float?
  description     String?    @db.VarChar(255)
  availableAt     DateTime?  @db.Timestamp(6)
  availability_id Int?
  year            Int?
  image           String?    @db.VarChar(255)
  availability    Available? @relation(fields: [availability_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  model           Models?    @relation(fields: [model_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
